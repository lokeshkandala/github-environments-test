# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "development" branch
  push:
    branches: [ "development", "main" ]
    tags: ["**"]
  pull_request:
    branches: ["**"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  setup:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    outputs:
      githubEnvironment: ${{ steps.githubEnvironment.outputs.githubEnvironment }}
      buildEnvironment: ${{ steps.buildEnvironment.outputs.buildEnvironment }}

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      # Runs a single command using the runners shell
      - name: Print GitHub Event
        run: |
          echo "GitHub Event Name: ${{ github.event_name }}"
          echo "GitHub Ref: ${{ github.ref }}"
          echo "${{ github.event.base_ref }}"
      - id: githubEnvironment
        run: echo "githubEnvironment=${{ github.ref == 'refs/heads/main' && 'uat' 
                                          || github.event.base_ref == 'refs/heads/main' && contains(github.ref, 'version') && 'prod' 
                                          || github.ref == 'refs/heads/development' && 'development' || ''}}">> $GITHUB_OUTPUT
      - id: buildEnvironment
        run: echo "buildEnvironment=${{ github.ref == 'refs/heads/main' && 'uat2' 
                                        || github.event.base_ref == 'refs/heads/main' && contains(github.ref, 'version') && 'prod' 
                                        || 'dev2' }}">> $GITHUB_OUTPUT
      - name: Print output variables
        run: echo "$buildEnvironment"
          
  deploy:
    runs-on: ubuntu-latest
    needs: setup
    if:  ${{needs.setup.outputs.githubEnvironment != '' }} 
    environment:
      name: ${{needs.setup.outputs.githubEnvironment}}
      
    steps:
      - name: ${{needs.setup.outputs.githubEnvironment}} deployemnt
        run: echo "build completd in ${{needs.setup.outputs.githubEnvironment}} ${{needs.setup.outputs.buildEnvironment}}"


       
